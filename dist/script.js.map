{"version":3,"sources":["script.js"],"names":["form","document","querySelector","firstName","getElementById","lastName","email","password","checkInputs","firstNameValue","value","trim","lastNameValue","emailValue","passwordValue","setErrorFor","setSuccessFor","isEmail","length","input","message","parentElement","innerHTML","setAttribute","test","addEventListener","e","preventDefault"],"mappings":"AAAA,aAAA,IAAMA,KAAOC,SAASC,cAAc,QAC9BC,UAAYF,SAASG,eAAe,aACpCC,SAAWJ,SAASG,eAAe,YACnCE,MAAQL,SAASG,eAAe,SAChCG,SAAWN,SAASG,eAAe,YAUzC,SAASI,cAEL,IAAMC,EAAiBN,UAAUO,MAAMC,OACjCC,EAAgBP,SAASK,MAAMC,OAC/BE,EAAaP,MAAMI,MAAMC,OACzBG,EAAgBP,SAASG,MAAMC,OAGf,KAAnBF,EACCM,YAAYZ,UAAW,8BAEvBa,cAAcb,WAGG,KAAlBS,EACCG,YAAYV,SAAU,6BAEtBW,cAAcX,UAGA,KAAfQ,EACLE,YAAYT,MAAO,yBACRW,QAAQJ,GAGbG,cAAcV,OAFdS,YAAYT,MAAO,mCAKF,KAAlBQ,EACCC,YAAYR,SAAU,4BACfO,EAAcI,QAAU,EAC/BH,YAAYR,SAAU,8CACfO,EAAcI,QAAU,GAC/BH,YAAYR,SAAU,+CAEtBS,cAAcT,SAGtB,CAGA,SAASQ,YAAYI,EAAOC,GACJD,EAAME,cACAnB,cAAc,iBAGlCoB,UAAYF,EAGlBD,EAAMI,aAAa,eAAgB,OAEvC,CAEA,SAASP,cAAcG,GACCA,EAAME,cACAnB,cAAc,iBAGlCoB,UAAY,GAGlBH,EAAMI,aAAa,eAAgB,QAEvC,CAGA,SAASN,QAAQX,GACb,MAAO,wJAAwJkB,KAAKlB,EACxK,CA1EAN,KAAKyB,iBAAiB,UAAU,SAACC,GAC7BA,EAAEC,iBAEFnB,aACJ","file":"script.js","sourcesContent":["const form = document.querySelector('form')\r\nconst firstName = document.getElementById('firstName')\r\nconst lastName = document.getElementById('lastName')\r\nconst email = document.getElementById('email')\r\nconst password = document.getElementById('password')\r\n\r\n\r\n\r\nform.addEventListener('submit', (e) => {\r\n    e.preventDefault()\r\n\r\n    checkInputs()\r\n})\r\n\r\nfunction checkInputs() {\r\n    // get values from the inputs\r\n    const firstNameValue = firstName.value.trim()\r\n    const lastNameValue = lastName.value.trim()\r\n    const emailValue = email.value.trim()\r\n    const passwordValue = password.value.trim()\r\n    \r\n\r\n    if(firstNameValue === '') {\r\n        setErrorFor(firstName, 'First Name cannot be empty')\r\n    } else {\r\n        setSuccessFor(firstName)\r\n    }\r\n\r\n    if(lastNameValue === '') {\r\n        setErrorFor(lastName, 'Last Name cannot be empty');\r\n    } else {\r\n        setSuccessFor(lastName);\r\n    }\r\n\r\n    if(emailValue === '') {\r\n\t\tsetErrorFor(email, 'Email cannot be empty');\r\n\t} else if (!isEmail(emailValue)) {\r\n        setErrorFor(email, 'Looks like this is not an email');\r\n    } else {\r\n        setSuccessFor(email)\r\n    }\r\n\r\n    if(passwordValue === '') {\r\n        setErrorFor(password, 'Password cannot be empty')\r\n    } else if (passwordValue.length <= 8) {\r\n        setErrorFor(password, 'Password must be minimum 8 characters long')\r\n    } else if (passwordValue.length >= 20) {\r\n        setErrorFor(password, 'Password must be maximum 20 characters long')\r\n    } else {\r\n        setSuccessFor(password)\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction setErrorFor(input, message) {\r\n    const signUpField = input.parentElement  //.signUp__field\r\n    const error = signUpField.querySelector('#errorMessage')\r\n\r\n    //add error message inside p\r\n    error.innerHTML = message\r\n\r\n    // add error class\r\n    input.setAttribute(\"aria-invalid\", \"true\")\r\n\r\n}\r\n\r\nfunction setSuccessFor(input) {\r\n    const signUpField = input.parentElement  //.signUp__field\r\n    const error = signUpField.querySelector('#errorMessage')\r\n\r\n    //add error message inside p\r\n    error.innerHTML = ''\r\n\r\n    // add success class\r\n    input.setAttribute(\"aria-invalid\", \"false\")\r\n\r\n}\r\n\r\n\r\nfunction isEmail(email){\r\n    return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}"]}